/* global React */
import React from 'react';
import NoteAttachment from './NoteAttachment.js';

const formatDate = (dateString) => {
    if (!dateString) return '';
    return new Date(dateString).toLocaleDateString('en-US', { 
        month: '2-digit', 
        day: '2-digit', 
        year: '2-digit',
        hour: '2-digit',
        minute: '2-digit',
        hour12: true
    });
};

const getInitials = (name) => {
    if (!name) return '??';
    return name.split(' ')
        .map(word => word[0])
        .join('')
        .toUpperCase()
        .slice(0, 2);
};

const getAvatarColor = (name) => {
    const colors = ['bg-red-500', 'bg-blue-500', 'bg-green-500', 'bg-yellow-500', 'bg-purple-500'];
    const hash = name.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);
    return colors[hash % colors.length];
};

const NoteItem = ({ 
    note, 
    isReply, 
    onReply, 
    replyingTo, 
    replyInput, 
    setReplyInput, 
    handleAddReply,
    users,
    replyCount,
    showAllReplies,
    setShowAllReplies,
    isAddingReply
}) => {
    const isReplying = replyingTo === note.ID;
    const taggedUsers = note.Tagged_Users 
        ? users.filter(user => note.Tagged_Users.includes(user.id))
        : [];

    // Find the note creator using User_Lookup ID
    const noteUser = users.find(user => user.id === note.user);

    return React.createElement(
        'div',
        { 
            className: isReply 
                ? "ml-12 border-l-2 border-l-blue-100 pl-4 mb-3"
                : "mb-4"
        },
        [
            // Main note container with improved shadow and hover state
            React.createElement('div',
                { 
                    className: `bg-white p-4 rounded-lg transition-shadow hover:shadow-sm ${isReply ? 'bg-gray-50' : 'border border-gray-100'}`
                },
                [
                    React.createElement('div', 
                        { className: "flex items-start gap-3" },
                        [
                            // User avatar/initials
                            React.createElement('div', 
                                { className: "flex-shrink-0" },
                                React.createElement('div', {
                                    className: "bg-gradient-to-br from-blue-50 to-blue-100 text-blue-600 rounded-full w-8 h-8 flex items-center justify-center text-sm font-medium flex-shrink-0 shadow-sm"
                                }, getInitials(noteUser?.name || note.author))
                            ),
                            // Content container
                            React.createElement('div', 
                                { className: "flex-1 min-w-0" },
                                [
                                    // Header row with author and tagged users
                                    React.createElement('div', 
                                        { className: "flex items-center justify-between mb-1" },
                                        [
                                            // Left side with author and tagged users
                                            React.createElement('div',
                                                { className: "flex items-center gap-2 flex-1 min-w-0" },
                                                [
                                                    // Author name
                                                    React.createElement('span', 
                                                        { className: "font-medium text-gray-900" }, 
                                                        note.author?.name || note.author
                                                    ),

                                                    // Department badge (if not Project Management)
                                                    note.department && note.department !== "Project Management" && 
                                                    React.createElement('span',
                                                        {
                                                            className: "inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-purple-50 text-purple-700"
                                                        },
                                                        note.department
                                                    ),

                                                    // Tagged users pills (up to 3)
                                                    taggedUsers.length > 0 && React.createElement('div',
                                                        { className: "flex items-center gap-1" },
                                                        [
                                                            ...taggedUsers.slice(0, 3).map(user => 
                                                                React.createElement('span',
                                                                    {
                                                                        key: user.id,
                                                                        className: "inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-blue-50 text-blue-600"
                                                                    },
                                                                    `@${user.name}`
                                                                )
                                                            ),
                                                            taggedUsers.length > 3 && React.createElement('span',
                                                                {
                                                                    className: "text-xs text-gray-500"
                                                                },
                                                                `+${taggedUsers.length - 3}`
                                                            )
                                                        ]
                                                    )
                                                ]
                                            ),
                                            // Date
                                            React.createElement('span', 
                                                { className: "text-xs text-gray-500 flex-shrink-0" },
                                                formatDate(note.addedTime)
                                            )
                                        ]
                                    ),
                                    // Note content
                                    React.createElement('p', 
                                        { className: "text-gray-700 whitespace-pre-wrap" },
                                        note.content || note.Note  // Handle both content and Note fields
                                    ),
                                    // Attachments section - updated to match data structure
                                    note.attachments && note.attachments.length > 0 && 
                                    React.createElement('div',
                                        { 
                                            className: "mt-3"
                                        },
                                        [
                                            // Attachments header
                                            React.createElement('div',
                                                {
                                                    className: "flex items-center gap-2 text-sm text-gray-500 mb-2"
                                                },
                                                [
                                                    React.createElement('i', {
                                                        className: "fas fa-paperclip"
                                                    }),
                                                    `${note.attachments.length} ${note.attachments.length === 1 ? 'Attachment' : 'Attachments'}`
                                                ]
                                            ),
                                            // Attachments grid
                                            React.createElement('div',
                                                { 
                                                    className: "inline-grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-2 bg-gray-50 p-2 rounded-lg"
                                                },
                                                note.attachments.map((attachment) => 
                                                    React.createElement(NoteAttachment, {
                                                        key: attachment.id,  // Use attachment.id instead of index
                                                        attachment: {
                                                            id: attachment.id,
                                                            name: attachment.name,
                                                            type: attachment.type,
                                                            url: attachment.url,
                                                            addedTime: attachment.addedTime
                                                        }
                                                    })
                                                )
                                            )
                                        ]
                                    ),
                                    // Tagged users
                                    React.createElement('div',
                                        { className: "mt-2 flex items-center gap-2 text-xs" },
                                        [
                                            // Check for either teamOnly or notifySales flags
                                            (note.teamOnly || note.notifySales) && React.createElement('span',
                                                {
                                                    className: `inline-flex items-center gap-1 px-2 py-1 rounded-full ${
                                                        note.teamOnly 
                                                        ? "bg-purple-100 text-purple-800"
                                                        : "bg-blue-100 text-blue-800"
                                                    }`
                                                },
                                                [
                                                    React.createElement('i', { 
                                                        className: note.teamOnly ? "fas fa-lock" : "fas fa-users"
                                                    }),
                                                    note.teamOnly ? "Team Only" : "Sales Notified"
                                                ]
                                            ),
                                            // Tagged Users indicator
                                            taggedUsers.length > 0 && React.createElement('span',
                                                {
                                                    className: "inline-flex items-center gap-1 px-2 py-1 rounded-full bg-blue-100 text-blue-800"
                                                },
                                                [
                                                    React.createElement('i', { className: "fas fa-users" }),
                                                    `${taggedUsers.length} Tagged`
                                                ]
                                            )
                                        ]
                                    ),
                                    // Footer row with reply button and count
                                    !isReply && React.createElement('div',
                                        { className: "mt-3 flex items-center gap-3" },
                                        [
                                            React.createElement('button',
                                                { 
                                                    className: "text-sm text-gray-500 hover:text-blue-600",
                                                    onClick: () => onReply(note.ID)
                                                },
                                                isReplying ? "Cancel Reply" : "Reply"
                                            ),
                                            replyCount > 0 && React.createElement('span',
                                                { className: "text-sm text-gray-500" },
                                                `${replyCount} ${replyCount === 1 ? 'reply' : 'replies'}`
                                            )
                                        ]
                                    )
                                ]
                            )
                        ]
                    )
                ]
            ),

            // Reply input section with improved styling
            isReplying && React.createElement('div',
                { className: "mt-3 bg-gray-50 p-4 rounded-lg border border-gray-100" },
                [
                    React.createElement('textarea',
                        {
                            className: "w-full p-3 border border-gray-200 rounded-lg mb-2 focus:border-blue-500 focus:ring-1 focus:ring-blue-500 transition-colors resize-none",
                            placeholder: "Write your reply...",
                            value: replyInput,
                            onChange: (e) => setReplyInput(e.target.value)
                        }
                    ),
                    React.createElement('button',
                        {
                            className: "px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-all duration-150 ease-in-out transform hover:shadow-md disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:shadow-none",
                            onClick: () => handleAddReply(note.ID),
                            disabled: !replyInput.trim()
                        },
                        isAddingReply ? 
                            React.createElement('div', 
                                { className: "flex items-center gap-2" },
                                [
                                    React.createElement('div', 
                                        { className: "animate-spin rounded-full h-4 w-4 border-2 border-white border-t-transparent" }
                                    ),
                                    "Adding..."
                                ]
                            ) : 
                            "Add Reply"
                    )
                ]
            )
        ]
    );
};

export default NoteItem;