import { logError } from './errorHandling.js';

/**
 * Uploads a document with file attachment to Zoho Creator
 * @param {Object} config Configuration object
 * @param {File} config.file The file to upload
 * @param {string} config.documentName Name of the document
 * @param {string} config.documentType Type of document
 * @param {boolean} config.isRevision Whether this is a revision
 * @param {string} config.projectId The project ID to link the document to
 * @param {string} config.currentUser The current user
 * @param {string} [config.appName="nexgen-portal"] The application name
 * @returns {Promise} Resolves with the response from the API
 */
export const uploadDocumentWithFile = async ({
    file,
    documentName,
    documentType = "",
    isRevision,
    projectId,
    currentUser,
    appName = "nexgen-portal"
}) => {
    try {
        // Step 1: Create the document record first
        const recordConfig = {
            app_name: appName,
            form_name: "Add_Document",
            payload: {
                data: {
                    Document_Name: documentName,
                    Doc_Type: documentType,
                    Is_Revision: isRevision ? "true" : "false",
                    Project: projectId,
                    File_Uploaded: false,
                    User_Lookup: currentUser.id
                }
            }
        };

        const recordResponse = await ZOHO.CREATOR.DATA.addRecords(recordConfig);
        console.log("Document Record Response:", recordResponse);
        if (recordResponse.code !== 3000) {
            const errorMessage = recordResponse.error?.[0]?.message || 'Unknown error';
            throw new Error(`Failed to create document record: ${errorMessage}`);
        }

        const newRecordId = recordResponse.data.ID;

        // Step 2: Upload the file
        const uploadConfig = {
            app_name: appName,
            report_name: "All_Documents",
            id: newRecordId,
            field_name: "File_Upload",
            file: file
        };

        const uploadResponse = await ZOHO.CREATOR.FILE.uploadFile(uploadConfig);
        console.log("Upload Response:", uploadResponse);
        if (uploadResponse.code !== 3000) {
            throw new Error(`Failed to upload file: ${uploadResponse.message}`);
        }

        // Step 3: Update the record to mark file as uploaded
        const updateConfig = {
            app_name: appName,
            report_name: "All_Documents",
            id: newRecordId,
            payload: {
                data: {
                    File_Uploaded: true
                }
            }
        };

        const updateResponse = await ZOHO.CREATOR.DATA.updateRecordById(updateConfig);
        console.log("Update Response:", updateResponse);
        if (updateResponse.code !== 3000) {
            console.warn('Failed to update File_Uploaded status:', updateResponse);
        }

        return {
            success: true,
            recordId: newRecordId,
            recordResponse,
            uploadResponse,
            updateResponse
        };

    } catch (error) {
        logError('Error in uploadDocumentWithFile:', error);
        throw error;
    }
};